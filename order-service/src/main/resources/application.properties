# Order Service Configuration
spring.application.name=order-service
server.port=8081

# GRPC Server Configuration
grpc.server.port=9091
grpc.server.address=0.0.0.0

# GRPC Client Configuration (User Service)
grpc.client.user-service.address=static://localhost:9090
grpc.client.user-service.negotiation-type=plaintext

# Database Configuration (H2 for demo)
spring.datasource.url=jdbc:h2:mem:ordersdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration
logging.level.com.example.order=DEBUG
logging.level.com.example.common.interceptors=DEBUG
logging.level.io.grpc=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# File logging for debugging
logging.file.name=logs/order-service.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30

# JVM Arguments to fix census stats warning
# Add these to your JVM arguments when running the application:
# -Dio.grpc.internal.CensusStatsAccessor.disabled=true
# -Dio.grpc.internal.CensusTracingAccessor.disabled=true

# Production profile configuration
spring.profiles.active=prod

---
# Production profile settings
spring.config.activate.on-profile=prod
spring:
  jmx:
    enabled: false
  jta:
    enabled: false
logging:
  level:
    io.grpc: WARN
    com.example: DEBUG
